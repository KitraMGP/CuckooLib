buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.github.zi_jing.cuckoogradle" version "1.0.1"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

// 在这里更改版本
version = '1.0.5'
group = 'com.github.zi_jing.cuckoolib'
description = 'The Cuckoo commons library.'
archivesBaseName = 'CuckooLib'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

CuckooGradle {
    mcVersion = '1.12.2'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        cuckooLib(MavenPublication) {
            artifact jar
            artifact sourceJar
            artifact javadocJar
            pom {
                groupId = project.group
                artifactId = archivesBaseName
                version = project.version
                description = project.description
            }
        }
    }
    repositories {
        if (project.hasProperty('localPublishMavenPath')) {
            maven {
                name = 'CuckooMaven'
                url = uri(project.properties.localPublishMavenPath)
            }
        }
    }
}

publish.dependsOn generateArtifactsJson

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'

    mappings = 'snapshot_20171003'

    replaceIn 'CuckooLib.java'
    replace '@CUCKOO_LIB_VERSION@', project.version
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

javadoc.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

repositories{
    maven {
        name = 'AliyunMaven'
        url = 'http://maven.aliyun.com/nexus/content/groups/public'
    }
}
